---

import RadioImg from './RadioImg';
import IconLink from './IconLink.astro';

const {group} = Astro.props;
const {slug, name, label, url, manifesto, img, policies} = group;

const options =  [
    {
        val: 'defense',
        title: 'Defesa',
        img: 'sym/shield-shaded.svg',
        bg_size: '70%'
    },
    {
        val: 'migration',
        title: 'Migração',
        img: 'sym/bricks.svg',
        bg_size: '70%'
    },
    {
        val: 'climate',
        title: 'Ambiente e energia',
        img: 'sym/recycle.svg',
        bg_size: '70%'
    },
    {
        val: 'economy',
        title: 'Economia',
        img: 'sym/currency-euro.svg',
        bg_size: '70%'
    },
    {
        val: 'social',
        title: 'Social',
        img: 'sym/heart-pulse-fill.svg',
        bg_size: '70%'
    },
    {
        val: 'eu',
        title: 'Crescimento e reforma da UE',
        img: 'sym/flag-fill.svg',
        bg_size: '70%'
    }
];
---
<div class="groupcard hidden flex flex-col items-center font-sans outline-none px-4" data-radio={slug}>
    <div class="w-48 h-24">
        <img src={`/img/groups/${img}`} alt="" class="w-full h-full object-contain" />
    </div>

    <div class="w-52 my-2 flex justify-evenly">
        {url &&
            <IconLink iconClass="bg-boxlink" text="Web" href={url} />
        }
        {manifesto &&
            <IconLink iconClass="bg-boxlink" text="Manifesto 2024" href={manifesto} />
        }
    </div>
    
    <div class="flex-auto pb-4">
        <!-- Radio -->
        <div class="flex items-baseline justify-center mb-1 pb-2 border-b border-slate-200">
            <div class="space-x-2 flex text-sm">
                <RadioImg options={options} size="size-8" margin="mx-0.5" targetClass={`group_policy_${slug}`} defaultValue="defense" client:load />
            </div>
        </div>
        <!-- Desc -->

        {options.map((o) => (
            <p class={`group_policy_${slug} text-lg text-slate-100 hidden`} data-radio={o.val}>{o.title}</p>
        ))}

        {policies.map((p: any) => (
            <ul class={`group_policy_${slug} text-sm text-slate-300 list-disc list-inside ${p.k!=='defense' ? 'hidden' : ''}`} data-radio={p.k}>
                {p.v.map((policyItem: string[]) => (
                    <li>
                        {policyItem[0]}{policyItem.slice(1).map((ref, i) => (
                            // Note slice returns empty array if length < slice value, so we don't need to check ref exists
                            // "ref &&" in case pos 1 of the array exists but = an empty str
                            (ref && <a class="text-sky-300" href={ref} target="_blank">&nbsp;<sup>{i+1}</sup></a>)
                        ))}
                    </li>
                ))}
            </ul>
        ))}
    </div>
</div>